.border-radius(@radius: 0) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.gradient(@startColor: @skytop, @endColor: @white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

.arrow-down(@width: 5px, @color: black) {
  width: 0;
  height: 0;
  border-left: @width solid transparent;
  border-right: @width solid transparent;
  border-top: @width solid @color;
}

.transform(@property) {
  -webkit-transform: @property;
  -moz-transform: @property;
  -ms-transform: @property;
  -o-transform: @property;
  transform: @property;
}

.animation(@parameters) {
  -webkit-animation: @parameters;
  -moz-animation: @parameters;
  -ms-animation: @parameters;
  -o-animation: @parameters;
  animation: @parameters;
}

.animation-paused {
  -webkit-animation-play-state: paused !important;
  -moz-animation-play-state: paused !important;
  -ms-animation-play-state: paused !important;
  -o-animation-play-state: paused !important;
  animation-play-state: paused !important;
}

.pan-background(@duration) {
  .animation(pan @duration linear infinite);
}

.blink {
  .animation(blink 1.5s steps(2, start) infinite);
}

/* Megaman animations */
.intro {
  .animation(intro-animation .8s steps(6));
}

.run {
  .animation(run-animation .7s steps(10) infinite);
}

.idle {
  .animation(idle-animation 1s steps(5) infinite);
}

.falling {
  .animation(fall-animation 1s steps(3));
}

/* Metool animations */
.metool-intro {
  .animation(metool-intro-animation .4s steps(3))
}

.metool-run {
  .animation(metool-run-animation .3s steps(2) infinite)
}

.metool-copter {
  .animation(metool-copter-animation .1s steps(3) infinite)
}